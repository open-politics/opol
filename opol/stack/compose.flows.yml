services:


## How to run a flow to test it locally

  # flowrunner:
  #   build:
  #     context: .
  #     dockerfile: ./flows/entities/Dockerfile
  #   env_file:
  #     - .env
  #   command: ["python", "extract_entities.py"]
  #   # volumes:
  #   #   - ./flows:/app/

  # generate_embeddings_onebatch:
  #   build:
  #     context: .
  #     dockerfile: ./flows/embeddings/Dockerfile
  #   command: ["bash", "start.sh"]
  #   env_file:
  #     - .env
  #   # volumes:
  #   #   - ./flows/embeddings:/app/

  ## if you need the core package:
  # container_with_core_package:
  #   build: 
  #     context: . # set to /stack so we can import core in flows from ../../core and even dependencies from other servicews like "COPY services/service-scraper/requirements.txt ."
  #     dockerfile: ./services/service-scraper/Dockerfile

  # flowrunner:
  #   build:
  #     context: .
  #     dockerfile: ./flows/Dockerfile
  #   env_file:
  #     - .env
  #   command: ["python", "classification/plot_titles.py"]
  #   volumes:
  #   - /home/jimvincentwagner/fullstack/opol/opol/python-client/opol:/app/opol
  #   - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/results:/app/results
  #   - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/data:/app/data

  # flowrunner:
  #   build:
  #     context: .
  #     dockerfile: ./flows/Dockerfile
  #   env_file:
  #     - .env
  #   command: ["python", "geocoding/geocode_locations.py"]
  #   volumes:
  #   - /home/jimvincentwagner/fullstack/opol/opol/python-client/opol:/app/opol
  #   - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/results:/app/results
  #   - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/data:/app/da


  flowrunner:
    build:
      context: .
      dockerfile: ./flows/Dockerfile
    env_file:
      - .env
    command: ["python", "classification/classification_flow.py"]
    volumes:
    - /home/jimvincentwagner/fullstack/opol/opol/python-client/opol:/app/opol
    - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/results:/app/results
    - /home/jimvincentwagner/fullstack/opol/opol/stack/flows/classification/data:/app/data

networks:
  default:
    external: false
  opol-app-stack:
    driver: bridge
    external: true
